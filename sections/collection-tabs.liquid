{{ 'component-card.css' | asset_url | stylesheet_tag }}
{{ 'component-price.css' | asset_url | stylesheet_tag }}
{{ 'component-slider.css' | asset_url | stylesheet_tag }}
{{ 'template-collection.css' | asset_url | stylesheet_tag }}

{% if section.settings.image_shape == 'blob' %}
  {{ 'mask-blobs.css' | asset_url | stylesheet_tag }}
{% endif %}

{%- unless section.settings.quick_add == 'none' -%}
  {{ 'quick-add.css' | asset_url | stylesheet_tag }}
  <script src="{{ 'product-form.js' | asset_url }}" defer="defer"></script>
{%- endunless -%}

{%- if section.settings.quick_add == 'standard' -%}
  <script src="{{ 'quick-add.js' | asset_url }}" defer="defer"></script>
{%- endif -%}

{%- if section.settings.quick_add == 'bulk' -%}
  <script src="{{ 'quick-add-bulk.js' | asset_url }}" defer="defer"></script>
  <script src="{{ 'quantity-popover.js' | asset_url }}" defer="defer"></script>
  <script src="{{ 'price-per-item.js' | asset_url }}" defer="defer"></script>
  <script src="{{ 'quick-order-list.js' | asset_url }}" defer="defer"></script>
{%- endif -%}

{%- style -%}
.section-{{ section.id }}-padding {
  padding-top: {{ section.settings.padding_top | times: 0.75 | round: 0 }}px;
  padding-bottom: {{ section.settings.padding_bottom | times: 0.75 | round: 0 }}px;
}

@media screen and (min-width: 750px) {
  .section-{{ section.id }}-padding {
    padding-top: {{ section.settings.padding_top }}px;
    padding-bottom: {{ section.settings.padding_bottom }}px;
  }
}

.tabs {
  display: flex;
  gap: 15px;
  margin-bottom: 25px;
  overflow-x: auto;
  scrollbar-width: none;
  justify-content: center;
}
.tab-button {
  padding: 8px 16px;
  cursor: pointer;
  background: transparent;
  border: 1px solid #ccc;
  border-radius: 4px;
  white-space: nowrap;
}
.tab-button.active {
  background: #016199;
  color: #fff;
}
.tab-content {
  display: none;
}
.tab-content.active {
  display: block;
}

@media screen and (max-width: 989px) {
    .slider.slider--tablet {
      scroll-padding-left: 0 !important;
    }
  }
@media screen and (max-width: 768px) {
  .tabs {
    display: flex;
    gap: 1rem;
    margin-block: 1.5rem;
    overflow-x: auto;
    white-space: nowrap;
    -webkit-overflow-scrolling: touch;
    scrollbar-width: none;
    padding: 0 1rem;
    scroll-snap-type: x mandatory;
    justify-content: flex-start;
  }

  .tabs::-webkit-scrollbar {
    display: none;
  }

  .tab-button {
    flex: 0 0 auto;
    scroll-snap-align: start;
  }

  .tab-button:first-child {
    margin-left: 0;
  }
}


{%- endstyle -%}

<div class="color-{{ section.settings.color_scheme }} isolate gradient page-width">
  <div class="section-{{ section.id }}-padding" id="collection-tabs-{{ section.id }}">
    
    {%- if section.settings.title != blank -%}
      <h2 class="home-title regular inline-richtext">
        {{ section.settings.title }}
      </h2>
    {%- endif -%}

    <!-- Tab Buttons -->
    <div class="page-width tabs">
      {% for block in section.blocks %}
        <button
          class="tab-button {% if forloop.first %}active{% endif %}"
          data-tab="tab-{{ forloop.index }}" aria-label="{{ block.settings.tab_title }}">
          {{ block.settings.tab_title }}
        </button>
      {% endfor %}
    </div>

    <!-- Tab Contents -->
    {% for block in section.blocks %}
      {% assign collection = collections[block.settings.collection] %}
      <div class="tab-content {% if forloop.first %}active{% endif %}" id="tab-{{ forloop.index }}">
        {% if collection != blank and collection.products.size > 0 %}
          <slider-component class="slider-mobile-gutter scroll-trigger animate--slide-in">
            <ul
              id="Slider-{{ section.id }}-{{ forloop.index }}"
              data-id="{{ section.id }}"
              class="grid product-grid contains-card contains-card--product grid--{{ section.settings.columns_desktop }}-col-desktop grid--{{ section.settings.columns_mobile }}-col-tablet-down slider slider--tablet grid--peek"
              role="list"
              aria-label="Product list"
            >
              {% for product in collection.products limit: section.settings.products_to_show %}
                <li class="grid__item slider__slide scroll-trigger animate--slide-in" style="--animation-order: {{ forloop.index }};">
                  {% render 'card-product',
                    card_product: product,
                    media_aspect_ratio: section.settings.image_ratio,
                    image_shape: section.settings.image_shape,
                    show_secondary_image: section.settings.show_secondary_image,
                    show_vendor: section.settings.show_vendor,
                    show_rating: section.settings.show_rating,
                    section_id: section.id,
                    quick_add: section.settings.quick_add,
                    show_quick_view: true
                  %}
                </li>
              {% endfor %}
            </ul>
          </slider-component>
        {% else %}
          <p>No products available in this collection.</p>
        {% endif %}
      </div>
    {% endfor %}
  </div>
</div>

<script>
document.addEventListener("DOMContentLoaded", function () {
  const buttons = document.querySelectorAll(".tab-button");
  const contents = document.querySelectorAll(".tab-content");

  buttons.forEach((button, index) => {
    button.addEventListener("click", () => {
      buttons.forEach(b => b.classList.remove("active"));
      contents.forEach(c => c.classList.remove("active"));

      button.classList.add("active");
      contents[index].classList.add("active");
    });
  });
});
</script>

{% schema %}
{
  "name": "Collection Tabs",
  "tag": "section",
  "class": "section",
  "settings": [
    {
      "type": "text",
      "id": "title",
      "label": "Heading",
      "default": "Our Collections"
    },
    {
      "type": "range",
      "id": "products_to_show",
      "min": 2,
      "max": 25,
      "step": 1,
      "default": 4,
      "label": "Products to show"
    },
    {
      "type": "select",
      "id": "image_ratio",
      "options": [
        { "value": "adapt", "label": "Adapt to image" },
        { "value": "portrait", "label": "Portrait" },
        { "value": "square", "label": "Square" }
      ],
      "default": "adapt",
      "label": "Image ratio"
    },
    {
      "type": "select",
      "id": "image_shape",
      "options": [
        { "value": "default", "label": "Default" },
        { "value": "round", "label": "Round" }
      ],
      "default": "default",
      "label": "Image shape"
    },
    {
      "type": "checkbox",
      "id": "show_secondary_image",
      "default": false,
      "label": "Show secondary image"
    },
    {
      "type": "checkbox",
      "id": "show_vendor",
      "default": false,
      "label": "Show vendor"
    },
    {
      "type": "checkbox",
      "id": "show_rating",
      "default": false,
      "label": "Show rating"
    },
    {
      "type": "select",
      "id": "quick_add",
      "default": "none",
      "label": "Quick add",
      "options": [
        { "value": "none", "label": "None" },
        { "value": "standard", "label": "Standard" },
        { "value": "bulk", "label": "Bulk" }
      ]
    },
    {
      "type": "range",
      "id": "columns_desktop",
      "min": 1,
      "max": 6,
      "step": 1,
      "default": 4,
      "label": "Columns on desktop"
    },
    {
      "type": "select",
      "id": "columns_mobile",
      "default": "2",
      "label": "Columns on mobile",
      "options": [
        { "value": "1", "label": "1" },
        { "value": "2", "label": "2" }
      ]
    },
    {
      "type": "color_scheme",
      "id": "color_scheme",
      "label": "Color scheme",
      "default": "scheme-1"
    },
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "Padding top",
      "default": 36
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "Padding bottom",
      "default": 36
    }
  ],
  "blocks": [
    {
      "type": "collection_tab",
      "name": "Collection Tab",
      "settings": [
        {
          "type": "text",
          "id": "tab_title",
          "label": "Tab Title",
          "default": "Collection"
        },
        {
          "type": "collection",
          "id": "collection",
          "label": "Select Collection"
        }
      ]
    }
  ],
  "max_blocks": 6,
  "presets": [
    {
      "name": "Tabbed Collections",
      "category": "Custom"
    }
  ]
}
{% endschema %}

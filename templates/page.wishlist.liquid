{% layout 'theme' %}

<div class="wishlist-container">
  <h1>Your Wishlist</h1>
  <div id="wishlist-products" class="wishlist-grid">
    <!-- Wishlist items will be rendered here -->
  </div>
</div>

<style>
.wishlist-container {
  padding: 0 3.2rem;
}

/* Grid Layout */
.wishlist-grid {
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  gap: 24px;
  margin-top: 24px;
}

@media (min-width: 750px) {
  .wishlist-grid {
    grid-template-columns: repeat(3, 1fr);
  }
}

@media (min-width: 990px) {
  .wishlist-grid {
    grid-template-columns: repeat(4, 1fr);
  }
}

/* Product Card */
.wishlist-product {
  border: 1px solid #ddd;
  border-radius: 8px;
  padding: 16px;
  background-color: #fff;
  position: relative;
  text-align: center;
}

.wishlist-product img {
  max-width: 100%;
  height: auto;
  border-radius: 4px;
  margin-bottom: 10px;
}

.wishlist-product h3 {
    font-size: 1.5rem;
    margin: 1rem 0;
}

.wishlist-product p {
  margin: 0 0 12px;
  font-weight: bold;
  color: #333;
}

/* Add to Cart Button */
.wishlist-product .add-to-cart {
  background-color: #005f9a;
  color: #fff;
  border: none;
  padding: 10px 14px;
  border-radius: 4px;
  cursor: pointer;
  transition: background-color 0.3s ease;
  width: 100%;
}

.wishlist-product .add-to-cart:hover {
  background-color: #004874;
}

/* Position the cross icon */
.wishlist-product {
  border: 1px solid #ddd;
  border-radius: 8px;
  padding: 16px;
  background-color: #fff;
  position: relative;
  text-align: center;
}

.remove-from-wishlist {
  background: none;
  border: none;
  position: absolute;
  top: 8px;
  right: 8px;
  cursor: pointer;
  padding: 0;
  z-index: 2;
}

.remove-from-wishlist svg {
  width: 20px;
  height: 20px;
  fill: #333;
}

.remove-from-wishlist:hover svg {
  fill: red;
}
</style>

<script>
  document.addEventListener("DOMContentLoaded", function () {
    const wishlist = JSON.parse(localStorage.getItem("wishlist") || "[]");

    // If wishlist is empty, show a message
    if (wishlist.length === 0) {
      document.getElementById("wishlist-products").innerHTML = "<p>No products in your wishlist.</p>";
      return;
    }

    // Fetch the products from the store
    fetch("/products.json")
      .then((res) => {
        if (!res.ok) {
          throw new Error("Failed to fetch products. Status: " + res.status);
        }
        return res.json();
      })
      .then((data) => {
        
        const allProducts = data.products;
        const filtered = wishlist.map((handle) => {
          return allProducts.find((p) => p.handle === handle);
        }).filter(Boolean);

        if (filtered.length === 0) {
          document.getElementById("wishlist-products").innerHTML = "<p>No valid products found in your wishlist.</p>";
          return;
        }

        const wishlistHTML = filtered.map((product) => {
          const imgSrc = product.images[0]?.src || "https://via.placeholder.com/300x300?text=No+Image";

          return `
            <div class="wishlist-product" data-handle="${product.handle}">
              <a href="/products/${product.handle}">
                <img src="${imgSrc}" alt="${product.title}" />
              </a>
              <h3>${product.title}</h3>
              <form method="post" action="/cart/add">
                <input type="hidden" name="id" value="${product.variants[0].id}">
                <button type="submit" class="add-to-cart" aria-label="add-to-cart">Add to Cart</button>
              </form>
              <!-- Cross icon to remove product from wishlist -->
              <button class="remove-from-wishlist" aria-label="remove">
                <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24">
                  <path d="M12 10.585L5.707 4.293a1 1 0 1 0-1.414 1.414L10.585 12l-6.292 6.293a1 1 0 1 0 1.414 1.414L12 13.415l6.293 6.293a1 1 0 1 0 1.414-1.414L13.415 12l6.293-6.293a1 1 0 1 0-1.414-1.414L12 10.585z"/>
                </svg>
              </button>
            </div>
          `;
        }).join("");

        document.getElementById("wishlist-products").innerHTML = wishlistHTML;

        // Add event listeners for remove buttons (cross icons)
        const removeButtons = document.querySelectorAll('.remove-from-wishlist');
        removeButtons.forEach(button => {
          button.addEventListener('click', function () {
            const productHandle = this.closest('.wishlist-product').dataset.handle;
            let updatedWishlist = wishlist.filter(handle => handle !== productHandle);
            localStorage.setItem("wishlist", JSON.stringify(updatedWishlist));
            this.closest('.wishlist-product').remove();
            // If wishlist is empty after removal, show the no products message
            if (updatedWishlist.length === 0) {
              document.getElementById("wishlist-products").innerHTML = "<p>No products in your wishlist.</p>";
            }
          });
        });
      })
      .catch((error) => {
        console.error("Failed to load products:", error);
        document.getElementById("wishlist-products").innerHTML = "<p>Error loading wishlist.</p>";
      });
  });
</script>

